<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.wpyuan.generate.mapper.mysql.EntityInfoMapper">

    <select id="selectTableInfo" resultType="java.util.Map">
        select a.table_name                          tableName,
               b.table_comment                       tableDesc,
               a.column_name                         columnName,
               a.column_type                         columnType,
               case a.data_type
                   when 'bigint' then 'Long'
                   when 'varchar' then 'String'
                   when 'decimal' then 'BigDecimal'
                   when 'tinyint' then 'Boolean'
                   when 'datetime' then 'Date'
                   when 'longtext' then 'String'
                   else 'String' end javaType,
               a.character_maximum_length            length,
               if(a.is_nullable = 'NO', false, true) isNull,
               a.column_default                      defaultValue,
               a.column_comment                      columnDesc,
               case c.column_name
                   when a.column_name then true
                   else false end                    isPk
        from (select table_name,
                     column_name,
                     column_type,
                     data_type,
                     character_maximum_length,
                     is_nullable,
                     column_default,
                     column_comment
              from information_schema.columns
              where table_schema = #{schemaName}
                and table_name in (
                  select table_name from information_schema.tables where table_schema = #{schemaName}
              )
             ) a
                 join
             (
                 select table_name, table_comment
                 from information_schema.tables
                 where table_schema = #{schemaName}
             ) b
             on a.table_name = b.table_name
                 left join (
            select table_name, column_name
            from information_schema.key_column_usage
            where table_name in (
                select table_name from information_schema.tables where table_schema = #{schemaName}
            )
              and constraint_name = 'primary'
        ) c on a.table_name = c.table_name;
    </select>

    <select id="selectCurrentSchemaName" resultType="java.lang.String">
        select database();
    </select>
</mapper>